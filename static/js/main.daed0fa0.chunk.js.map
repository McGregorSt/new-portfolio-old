{"version":3,"sources":["data/projectsList.js","components/Contact.js","components/GridTile.js","components/Project.js","components/views/ProjectsGrid.js","App.js","reportWebVitals.js","index.js"],"names":["oldProjects","title","description","link","slided","Wrapper","styled","div","_templateObject","Object","taggedTemplateLiteral","StyledContact","_templateObject2","_ref","active","css","_templateObject3","StyledContactDetails","_templateObject4","StyledContactTypes","_templateObject5","StyledHeader","_templateObject6","CloseBtn","_templateObject7","ContactDetails","react_default","a","createElement","contactTypes","entries","mobile","email","linkedIn","map","_ref2","_ref3","slicedToArray","contactType","contactValue","key","Math","random","concat","Contact","_ref4","handleActive","onClick","Contact_ContactDetails","GridTile","GridTile_templateObject","Project","project","handleClick","StyledGrid","ProjectsGrid_templateObject","StyledWrapper","ProjectsGrid_templateObject2","StyledGridTile","ProjectsGrid_templateObject3","StyledViewer","ProjectsGrid_templateObject4","StyledButton","ProjectsGrid_templateObject5","StyledLink","ProjectsGrid_templateObject6","ProjectsGrid","_useState","useState","_useState2","showOnViewer","setShowOnViewer","_useState3","_useState4","startTypewriting","setStartTypewriting","_useState5","_useState6","endTypewriting","setEndTypewriting","_useState7","_useState8","setLink","typewriting","console","log","text","i","typeInterval","setInterval","length","substring","setTimeout","clearInterval","Fragment","href","target","index","Project_Project","Contact_Contact","StyledAppWrapper","App_templateObject","App_templateObject2","App","setActive","ProjectsGrid_ProjectsGrid","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"uRAgCaA,EAAc,CACzB,CACEC,MAAO,YACPC,YAAW,uPACXC,KAAM,aACNC,QAAQ,GAEV,CACEH,MAAO,yBACPC,YAAW,+OACXC,KAAM,0BACNC,QAAQ,GAEV,CACEH,MAAO,iBACPC,YAAW,6KAGXC,KAAM,kBACNC,QAAQ,GAEV,CACEH,MAAO,kBACPC,YAAW,sMACXC,KAAM,oBACNC,QAAQ,GAEV,CACEH,MAAO,UACPC,YAAW,yLACXC,KAAM,WACNC,QAAQ,GAEV,CACEH,MAAO,cACPC,YAAW,yQACXC,KAAM,eACNC,QAAQ,GAEV,CACEH,MAAO,aACPC,YAAW,0MACXC,KAAM,UACNC,QAAQ,GAEV,CACEH,MAAO,UACPC,YAAW,yLACXC,KAAM,WACNC,QAAQ,GAEV,CACEH,MAAO,cACPC,YAAW,yQACXC,KAAM,eACNC,QAAQ,GAEV,CACEH,MAAO,aACPC,YAAW,0MACXC,KAAM,UACNC,QAAQ,IC1FNC,EAAUC,IAAOC,IAAVC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,iCAIPE,EAAgBL,IAAOC,IAAVK,MAAAH,OAAAC,EAAA,EAAAD,CAAA,6lCAwCf,SAAAI,GAAA,OAAAA,EAAGC,QAEHC,YADMC,MAAAP,OAAAC,EAAA,EAAAD,CAAA,yjBA2BJQ,EAAuBX,IAAOC,IAAVW,MAAAT,OAAAC,EAAA,EAAAD,CAAA,wJAQpBU,EAAqBb,IAAOC,IAAVa,MAAAX,OAAAC,EAAA,EAAAD,CAAA,kCAIlBY,EAAef,IAAOC,IAAVe,MAAAb,OAAAC,EAAA,EAAAD,CAAA,+DAKZc,EAAWjB,IAAOC,IAAViB,MAAAf,OAAAC,EAAA,EAAAD,CAAA,2CAORgB,EAAiB,WACrB,OACEC,EAAAC,EAAAC,cAACX,EAAD,SAEGY,EAFH,MAcEA,EAAepB,OAAOqB,QANX,CACfC,OAAQ,cACRC,MAAO,2BACPC,SAAU,qBAGkCC,IAC5C,SAAAC,GAAiC,IAAAC,EAAA3B,OAAA4B,EAAA,EAAA5B,CAAA0B,EAAA,GAA/BG,EAA+BF,EAAA,GAAlBG,EAAkBH,EAAA,GAC/B,OACEV,EAAAC,EAAAC,cAACT,EAAD,CAAoBqB,IAAKC,KAAKC,UAA9B,IAAAC,OACOL,EADP,cAAAK,OAC6BJ,EAD7B,YAQOK,EAAU,SAAAC,GAA8B,IAA3B/B,EAA2B+B,EAA3B/B,OAAQgC,EAAmBD,EAAnBC,aAChC,OACEpB,EAAAC,EAAAC,cAACvB,EAAD,KACEqB,EAAAC,EAAAC,cAACjB,EAAD,CAAeG,OAAQA,EAAQiC,QAAS,kBAAMD,MAC5CpB,EAAAC,EAAAC,cAACP,EAAD,KAEEK,EAAAC,EAAAC,cAACL,EAAD,WAFF,WAKAG,EAAAC,EAAAC,cAACoB,EAAD,SCrIKC,EAAW3C,IAAOC,IAAV2C,MAAAzC,OAAAC,EAAA,EAAAD,CAAA,8hBCCR0C,EAAU,SAAAtC,GAA8B,IAA3BuC,EAA2BvC,EAA3BuC,QAASC,EAAkBxC,EAAlBwC,YAKjC,OAHE3B,EAAAC,EAAAC,cAACqB,EAAD,CAAUF,QAAS,kBAAMM,EAAYD,KAAWA,EAAQnD,QCEtDqD,EAAahD,IAAOC,IAAVgD,MAAA9C,OAAAC,EAAA,EAAAD,CAAA,yBAIV+C,EAAgBlD,IAAOC,IAAVkD,MAAAhD,OAAAC,EAAA,EAAAD,CAAA,w9BAgDbiD,EAAiBpD,IAAOC,IAAVoD,MAAAlD,OAAAC,EAAA,EAAAD,CAAA,0IAChBwC,GAQEW,EAAetD,IAAOC,IAAVsD,MAAApD,OAAAC,EAAA,EAAAD,CAAA,kCAIZqD,EAAexD,IAAOC,IAAVwD,MAAAtD,OAAAC,EAAA,EAAAD,CAAA,UAGZuD,EAAa1D,IAAOqB,EAAVsC,MAAAxD,OAAAC,EAAA,EAAAD,CAAA,mPAWHyD,EAAe,SAAArD,GAA8B,IAA3BC,EAA2BD,EAA3BC,OAAQgC,EAAmBjC,EAAnBiC,aAAmBqB,EAChBC,qBADgBC,EAAA5D,OAAA4B,EAAA,EAAA5B,CAAA0D,EAAA,GACjDG,EADiDD,EAAA,GACnCE,EADmCF,EAAA,GAAAG,EAERJ,oBAAS,GAFDK,EAAAhE,OAAA4B,EAAA,EAAA5B,CAAA+D,EAAA,GAEjDE,EAFiDD,EAAA,GAE/BE,EAF+BF,EAAA,GAAAG,EAGZR,oBAAS,GAHGS,EAAApE,OAAA4B,EAAA,EAAA5B,CAAAmE,EAAA,GAGjDE,EAHiDD,EAAA,GAGjCE,EAHiCF,EAAA,GAAAG,EAIhCZ,mBAAS,IAJuBa,EAAAxE,OAAA4B,EAAA,EAAA5B,CAAAuE,EAAA,GAIjD7E,EAJiD8E,EAAA,GAI3CC,EAJ2CD,EAAA,GAMlD5B,EAAc,SAACD,GACnBmB,EAAgBnB,EAAQlD,aACxBiF,EAAY/B,EAAQlD,YAAa,GACjCgF,EAAQ9B,EAAQjD,MAChBiF,QAAQC,IAAIjC,EAAQjD,OAKhBgF,EAAc,SAACG,EAAMC,GACzB,IAAMC,EAAeC,YAAY,WAC3BF,EAAID,EAAKI,QACXf,GAAoB,GACpBJ,EAAgBe,EAAKK,UAAU,EAAGJ,EAAI,IACtCA,GAAK,IAELH,QAAQC,IAAI,OACZO,WAAW,WACTjB,GAAoB,GACpBI,GAAkB,IACjB,MACHc,cAAcL,KAEf,KAGL,OACE9D,EAAAC,EAAAC,cAAC0B,EAAD,KACE5B,EAAAC,EAAAC,cAAC4B,EAAD,KACE9B,EAAAC,EAAAC,cAAC8B,EAAD,KACEhC,EAAAC,EAAAC,cAACgC,EAAD,KAAeU,GACf5C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmE,SAAA,KACGhB,IAAmBJ,EAClBhD,EAAAC,EAAAC,cAACoC,EAAD,CAAY+B,KAAM5F,EAAM6F,OAAO,UAC7BtE,EAAAC,EAAAC,cAACkC,EAAD,CAAcf,QAAS,cAAvB,UAKF,KAIL/C,EAAYkC,IAAI,SAACkB,EAAS6C,GAAV,OACfA,EAAQ,EACNvE,EAAAC,EAAAC,cAACsE,EAAD,CACE1D,IAAKC,KAAKC,SACVU,QAASA,EACT6C,MAAOA,EACP5C,YAAaA,IAGf,MAIN3B,EAAAC,EAAAC,cAACuE,EAAD,CAASrD,aAAcA,EAAchC,OAAQA,MC/I7CsF,EAAmB9F,IAAOC,IAAV8F,MAAA5F,OAAAC,EAAA,EAAAD,CAAA,iHAOJH,IAAOC,IAAV+F,MAAA7F,OAAAC,EAAA,EAAAD,CAAA,QAiBA8F,MAff,WAAe,IAAApC,EACeC,oBAAS,GADxBC,EAAA5D,OAAA4B,EAAA,EAAA5B,CAAA0D,EAAA,GACNrD,EADMuD,EAAA,GACEmC,EADFnC,EAAA,GAQb,OACM3C,EAAAC,EAAAC,cAACwE,EAAD,KACE1E,EAAAC,EAAAC,cAAC6E,EAAD,CAAc3F,OAAQA,EAAQgC,aAPjB,WACnBsC,QAAQC,IAAI,OAAQvE,GACpB0F,GAAW1F,QCPA4F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAlG,GAAiD,IAA9CoG,EAA8CpG,EAA9CoG,OAAQC,EAAsCrG,EAAtCqG,OAAQC,EAA8BtG,EAA9BsG,OAAQC,EAAsBvG,EAAtBuG,OAAQC,EAAcxG,EAAdwG,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACP7F,EAAAC,EAAAC,cAACF,EAAAC,EAAM6F,WAAP,KACE9F,EAAAC,EAAAC,cAAC6F,EAAD,OAEFC,SAASC,eAAe,SAM1BjB","file":"static/js/main.daed0fa0.chunk.js","sourcesContent":["export const projects = [\r\n  {\r\n    id: 0,\r\n    name: 'Welcome',\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'Project1',\r\n    description: 'P1 desc',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Project2',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Project3',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Project4',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Project5',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Project6',\r\n  },\r\n]\r\n\r\nexport const oldProjects = [\r\n  {\r\n    title: 'FX holder',\r\n    description: `This app is a holder for your FX transactions. You can add transactions, delete them and see summary of it all. After you put a rate, your transactions will be recalculated into PLN. It's SPA built with React and Redux, styled with css modules.`,\r\n    link: '/fx_holder',\r\n    slided: false,\r\n  },\r\n  {\r\n    title: 'Management Web Reports',\r\n    description: `It's a single-page application for generating reports with summary for every day income volumes and others (e.g. volume of active clients, volume of assets, volume of accounts). App was built with React, styled in CSS and is responsive.`,\r\n    link: '/management-web-reports',\r\n    slided: false,\r\n  },\r\n  {\r\n    title: 'Burger Builder',\r\n    description: `Application for composing your favourite burger. Built with\r\n                  React, styled in CSS using media queries. This app is a part of\r\n                  tutorial`,\r\n    link: '/burger_builder',\r\n    slided: false,\r\n  },\r\n  {\r\n    title: 'Polluted Cities',\r\n    description: `Built with ES6, web app for searching top ten most polluted cities in provided country. Data are provided from public API https://docs.openaq.org/ and cities descriptions come from Wikipedia API.`,\r\n    link: '/polluted_cities/',\r\n    slided: false,\r\n  },\r\n  {\r\n    title: 'Marilyn',\r\n    description: `Web app based on React and Redux. This app gives you 9 most recently uploaded pictures of Marilyn Monroe from Flickr (Flickr API). It was styled with CSS modules and it is responsive`,\r\n    link: '/marilyn',\r\n    slided: false,\r\n  },\r\n  {\r\n    title: 'Colour Game',\r\n    description: `Game rules: click colour square which at least has one the same colour naighbour (not diagonnaly) and collect as much points as possible. Clicked squares disappear, all above them move down and missing ones are newly generated. App was built with React and Redux`,\r\n    link: '/colour_game',\r\n    slided: false,\r\n  },\r\n  {\r\n    title: 'Web design',\r\n    description: `Web development based on provided designs. This page is retina ready with its 2x graphics, with some features made alive with jQuery. There is a video modal built on iframe with overlay. Page is RWD.`,\r\n    link: '/newOne',\r\n    slided: false,\r\n  },\r\n  {\r\n    title: 'Marilyn',\r\n    description: `Web app based on React and Redux. This app gives you 9 most recently uploaded pictures of Marilyn Monroe from Flickr (Flickr API). It was styled with CSS modules and it is responsive`,\r\n    link: '/marilyn',\r\n    slided: false,\r\n  },\r\n  {\r\n    title: 'Colour Game',\r\n    description: `Game rules: click colour square which at least has one the same colour naighbour (not diagonnaly) and collect as much points as possible. Clicked squares disappear, all above them move down and missing ones are newly generated. App was built with React and Redux`,\r\n    link: '/colour_game',\r\n    slided: false,\r\n  },\r\n  {\r\n    title: 'Web design',\r\n    description: `Web development based on provided designs. This page is retina ready with its 2x graphics, with some features made alive with jQuery. There is a video modal built on iframe with overlay. Page is RWD.`,\r\n    link: '/newOne',\r\n    slided: false,\r\n  },\r\n]\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst StyledContact = styled.div`\r\n  /* width: 240px; */\r\n  /* height: 120px; */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  font-size: 24px;\r\n  font-weight: 100;\r\n  text-align: center;\r\n  /* background-color: aliceblue; */\r\n  cursor: pointer;\r\n  position: fixed;\r\n  bottom: -130px;\r\n  right: -150px;\r\n  transform: rotate(-45deg);\r\n  /* transition: bottom 2s, right 2s, font-size 2s; */\r\n  transition-timing-function: ease-in-out;\r\n  transition: 0.7s;\r\n  border: 1px solid rgba(255, 255, 255, 0.12);\r\n  /* border-radius: 15px; */\r\n  background: linear-gradient(\r\n    125deg,\r\n    rgba(252, 143, 35, 0.55),\r\n    rgba(252, 143, 35, 0.4)\r\n  );\r\n  backdrop-filter: blur(2px);\r\n  -webkit-backdrop-filter: blur(10px);\r\n  box-shadow: rgba(0, 0, 0, 0.09) 0px 10px 20px, rgba(0, 0, 0, 0.13) 0px 6px 6px;\r\n  box-shadow: rgba(0, 0, 0, 0.8) 0px 30px 90px;\r\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 30px 90px;\r\n  box-shadow: rgba(0, 0, 0, 0.76) 0px -12px 70px 4px;\r\n\r\n  color: rgba(0, 0, 0, 0.99);\r\n  /* padding: 20px 0; */\r\n\r\n  /* &:hover {\r\n    bottom: -280px;\r\n    right: -280px;\r\n    font-size: 32px;\r\n  } */\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      position: fixed;\r\n      /* background-color: aquamarine; */\r\n      /* width: 300px; */\r\n      /* height: 320px; */\r\n      bottom: 0px;\r\n      right: 0px;\r\n      background: linear-gradient(\r\n        125deg,\r\n        rgba(252, 143, 35, 0.65),\r\n        rgba(252, 143, 35, 0.25)\r\n      );\r\n      padding: 20px 0;\r\n      transform: rotate(0deg);\r\n      border-radius: 15px;\r\n      transition-timing-function: ease-in;\r\n      transition: 0.8s;\r\n\r\n      /* &:hover {\r\n        bottom: 280px;\r\n        right: 280px;\r\n        font-size: 32px;\r\n      } */\r\n    `}\r\n`\r\n\r\nconst StyledContactDetails = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: left;\r\n  align-items: flex-start;\r\n  padding: 20px 10px;\r\n  font-size: 20px;\r\n`\r\nconst StyledContactTypes = styled.div`\r\n  padding: 0 0 0 20px;\r\n`\r\n\r\nconst StyledHeader = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 5fr;\r\n`\r\n\r\nconst CloseBtn = styled.div`\r\n  /* align-self: flex-start; */\r\n`\r\n// const StyledBackdrop = styled.div`\r\n//   background-color: rgba(0, 0, 0, 0.5);\r\n// `;\r\n\r\nconst ContactDetails = () => {\r\n  return (\r\n    <StyledContactDetails>\r\n      &#123;\r\n      {contactTypes}\r\n      &#125;\r\n    </StyledContactDetails>\r\n  )\r\n}\r\n\r\nconst contacts = {\r\n  mobile: '48506145094',\r\n  email: 'stasiak.gregor@gmail.com',\r\n  linkedIn: 'grzegorz.stasiak',\r\n}\r\n\r\nconst contactTypes = Object.entries(contacts).map(\r\n  ([contactType, contactValue]) => {\r\n    return (\r\n      <StyledContactTypes key={Math.random()}>\r\n        {`\"${contactType}\"`}: {`\"${contactValue}\"`},\r\n      </StyledContactTypes>\r\n    )\r\n    // return console.log(`${key} ${value}`);\r\n  }\r\n)\r\n\r\nexport const Contact = ({ active, handleActive }) => {\r\n  return (\r\n    <Wrapper>\r\n      <StyledContact active={active} onClick={() => handleActive()}>\r\n        <StyledHeader>\r\n          {/* {active ? <CloseBtn>Cl</CloseBtn> : ''}  */}\r\n          <CloseBtn>Cl</CloseBtn> \r\n          Contact\r\n        </StyledHeader>\r\n        <ContactDetails />\r\n      </StyledContact>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const GridTile = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 3fr 1fr;\r\n  /* flex-direction: column;\r\n  justify-content: space-around; */\r\n  border: 1px solid rgba(255, 255, 255, 0.12);\r\n  border-radius: 15px;\r\n  padding: 30px 0 60px 0;\r\n  background: linear-gradient(\r\n    125deg,\r\n    rgba(255, 255, 255, 0.35),\r\n    rgba(255, 255, 255, 0)\r\n  );\r\n  backdrop-filter: blur(4px);\r\n  -webkit-backdrop-filter: blur(10px);\r\n  box-shadow: rgba(0, 0, 0, 0.09) 0px 10px 20px, rgba(0, 0, 0, 0.13) 0px 6px 6px;\r\n  color: rgba(0, 0, 0, 0.99);\r\n  font-size: 26px;\r\n`\r\n","import React from \"react\"\r\nimport { GridTile } from \"./GridTile\"\r\n\r\nexport const Project = ({ project, handleClick }) => {\r\n  const toDisplay = (\r\n    <GridTile onClick={() => handleClick(project)}>{project.title}</GridTile>\r\n  )\r\n\r\n  return toDisplay\r\n}\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { oldProjects } from '../../data/projectsList'\r\nimport { Contact } from '../Contact'\r\nimport { GridTile } from '../GridTile'\r\nimport { Project } from '../Project'\r\n\r\nconst StyledGrid = styled.div`\r\n  width: 85%;\r\n`\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-gap: 40px;\r\n  & :nth-child(1) {\r\n    grid-template-rows: 2fr 1fr;\r\n    grid-column: 1 / 4;\r\n    grid-row: 1 / 3;\r\n  }\r\n  & :nth-child(2) {\r\n    /* grid-column: 4 / 4;\r\n    grid-row: 2 / 2; */\r\n  }\r\n  & :nth-child(6) {\r\n    grid-column: 3 / 3;\r\n    grid-row: 3 / 4;\r\n  }\r\n  & :nth-child(3) {\r\n    grid-column: 4 / 4;\r\n    grid-row: 3 / 3;\r\n  }\r\n  & :nth-child(1) {\r\n    background: rgba(0, 0, 0, 0.7);\r\n    color: rgba(255, 255, 255, 0.5);\r\n    grid-gap: 10px;\r\n    border-radius: 15px;\r\n    font-size: 32px;\r\n\r\n    & :nth-child(1) {\r\n      background: transparent;\r\n      /* border: 2px solid black; */\r\n    }\r\n  }\r\n\r\n  & :nth-child(n + 2) {\r\n    height: 80px;\r\n    backdrop-filter: blur(20px);\r\n    font-size: 24px;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    &:hover {\r\n      background: rgba(255, 255, 255, 0.1);\r\n      cursor: pointer;\r\n      backdrop-filter: blur(7px);\r\n    }\r\n  }\r\n`\r\nconst StyledGridTile = styled.div`\r\n  ${GridTile};\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 40px;\r\n`\r\n\r\nconst StyledViewer = styled.div`\r\n  border-radius: 10px;\r\n`\r\n\r\nconst StyledButton = styled.div`\r\n`\r\n\r\nconst StyledLink = styled.a`\r\n  display: flex;\r\n  justify-content: center;\r\n  border: 2px solid rgba(0, 0, 0, 0.2);\r\n  border-radius: 15px;\r\n  background: rgba(255, 255, 255, 0.03);\r\n  text-decoration: none;\r\n  backdrop-filter: blur(1px);\r\n  /* border: none; */\r\n`\r\n\r\nexport const ProjectsGrid = ({ active, handleActive }) => {\r\n  const [showOnViewer, setShowOnViewer] = useState()\r\n  const [startTypewriting, setStartTypewriting] = useState(false)\r\n  const [endTypewriting, setEndTypewriting] = useState(false)\r\n  const [link, setLink] = useState('')\r\n\r\n  const handleClick = (project) => {\r\n    setShowOnViewer(project.description)\r\n    typewriting(project.description, 1)\r\n    setLink(project.link)\r\n    console.log(project.link)\r\n  }\r\n\r\n  const handleGoToBtn = () => {}\r\n\r\n  const typewriting = (text, i) => {\r\n    const typeInterval = setInterval(() => {\r\n      if (i < text.length) {\r\n        setStartTypewriting(true)\r\n        setShowOnViewer(text.substring(0, i + 1))\r\n        i += 1\r\n      } else {\r\n        console.log('end')\r\n        setTimeout(() => {\r\n          setStartTypewriting(false)\r\n          setEndTypewriting(true)\r\n        }, 1200)\r\n        clearInterval(typeInterval)\r\n      }\r\n    }, 30)\r\n  }\r\n\r\n  return (\r\n    <StyledGrid>\r\n      <StyledWrapper>\r\n        <StyledGridTile>\r\n          <StyledViewer>{showOnViewer}</StyledViewer>\r\n          <>\r\n            {endTypewriting && !startTypewriting ? (\r\n              <StyledLink href={link} target=\"_blank\">\r\n                <StyledButton onClick={() => handleGoToBtn()}>\r\n                  GO TO\r\n                </StyledButton>\r\n              </StyledLink>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </>\r\n        </StyledGridTile>\r\n        {oldProjects.map((project, index) =>\r\n          index > 0 ? (\r\n            <Project\r\n              key={Math.random()}\r\n              project={project}\r\n              index={index}\r\n              handleClick={handleClick}\r\n            ></Project>\r\n          ) : (\r\n            ''\r\n          )\r\n        )}\r\n      </StyledWrapper>\r\n      <Contact handleActive={handleActive} active={active} />\r\n    </StyledGrid>\r\n  )\r\n}\r\n","import './App.css'\r\nimport { ProjectsGrid } from './components/views/ProjectsGrid'\r\nimport styled from 'styled-components'\r\nimport React, { useState } from 'react'\r\n\r\nconst StyledAppWrapper = styled.div`\r\n  width: 85%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\nconst StyledDiv = styled.div``\r\n\r\nfunction App() {\r\n  const [active, setActive] = useState(false)\r\n\r\n  const handleActive = () => {\r\n    console.log('clip', active)\r\n    setActive(!active)\r\n  }\r\n\r\n  return (\r\n        <StyledAppWrapper>\r\n          <ProjectsGrid active={active} handleActive={handleActive} />\r\n        </StyledAppWrapper>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}